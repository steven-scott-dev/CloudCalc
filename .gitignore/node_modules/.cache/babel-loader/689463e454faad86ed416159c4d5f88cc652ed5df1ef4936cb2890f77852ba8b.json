{"ast":null,"code":"const express = require('express');\nconst mongoose = require('mongoose');\nconst cors = require('cors');\nrequire('dotenv').config();\nconst app = express();\n\n// Middleware\napp.use(cors());\napp.use(express.json());\n\n// Connect to MongoDB\nmongoose.connect(process.env.MONGO_URI, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(() => console.log('‚úÖ MongoDB connected')).catch(err => console.error('‚ùå MongoDB connection error:', err));\n\n// Test route\napp.get('/', (req, res) => {\n  res.send('üöÄ CloudCalc backend is running');\n});\napp.get('/test', (req, res) => {\n  res.json({\n    message: 'Server is connected and working!'\n  });\n});\n\n// Start server\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => {\n  console.log(`üåê Server is running on http://localhost:${PORT}`);\n});","map":{"version":3,"names":["express","require","mongoose","cors","config","app","use","json","connect","process","env","MONGO_URI","useNewUrlParser","useUnifiedTopology","then","console","log","catch","err","error","get","req","res","send","message","PORT","listen"],"sources":["C:/Users/18654/OneDrive/Desktop/cloudcalc/client/src/index.js"],"sourcesContent":["const express = require('express');\nconst mongoose = require('mongoose');\nconst cors = require('cors');\nrequire('dotenv').config();\n\nconst app = express();\n\n// Middleware\napp.use(cors());\napp.use(express.json());\n\n// Connect to MongoDB\nmongoose.connect(process.env.MONGO_URI, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n})\n.then(() => console.log('‚úÖ MongoDB connected'))\n.catch((err) => console.error('‚ùå MongoDB connection error:', err));\n\n// Test route\napp.get('/', (req, res) => {\n  res.send('üöÄ CloudCalc backend is running');\n});\n\napp.get('/test', (req, res) => {\n  res.json({ message: 'Server is connected and working!' });\n});\n\n// Start server\nconst PORT = process.env.PORT || 5000;\napp.listen(PORT, () => {\n  console.log(`üåê Server is running on http://localhost:${PORT}`);\n});\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,QAAQ,GAAGD,OAAO,CAAC,UAAU,CAAC;AACpC,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC5BA,OAAO,CAAC,QAAQ,CAAC,CAACG,MAAM,CAAC,CAAC;AAE1B,MAAMC,GAAG,GAAGL,OAAO,CAAC,CAAC;;AAErB;AACAK,GAAG,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;AACfE,GAAG,CAACC,GAAG,CAACN,OAAO,CAACO,IAAI,CAAC,CAAC,CAAC;;AAEvB;AACAL,QAAQ,CAACM,OAAO,CAACC,OAAO,CAACC,GAAG,CAACC,SAAS,EAAE;EACtCC,eAAe,EAAE,IAAI;EACrBC,kBAAkB,EAAE;AACtB,CAAC,CAAC,CACDC,IAAI,CAAC,MAAMC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAC9CC,KAAK,CAAEC,GAAG,IAAKH,OAAO,CAACI,KAAK,CAAC,6BAA6B,EAAED,GAAG,CAAC,CAAC;;AAElE;AACAb,GAAG,CAACe,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACzBA,GAAG,CAACC,IAAI,CAAC,iCAAiC,CAAC;AAC7C,CAAC,CAAC;AAEFlB,GAAG,CAACe,GAAG,CAAC,OAAO,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC7BA,GAAG,CAACf,IAAI,CAAC;IAAEiB,OAAO,EAAE;EAAmC,CAAC,CAAC;AAC3D,CAAC,CAAC;;AAEF;AACA,MAAMC,IAAI,GAAGhB,OAAO,CAACC,GAAG,CAACe,IAAI,IAAI,IAAI;AACrCpB,GAAG,CAACqB,MAAM,CAACD,IAAI,EAAE,MAAM;EACrBV,OAAO,CAACC,GAAG,CAAC,4CAA4CS,IAAI,EAAE,CAAC;AACjE,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}